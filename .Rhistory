p<-ggplot(data=pdb, aes(x=V1, y=V2)) +
geom_bar(stat="identity", fill=y) +
theme_minimal()
p<-ggplot(data=pdb, aes(x=V1, y=V2)) +
geom_bar(stat="identity", fill=V1) +
theme_minimal()
p<-ggplot(data=pdb, aes(x=V1, y=V2, fill=V1)) +
geom_bar(stat="identity") +
theme_minimal()
p
p + scale_fill_manual(values=c("#BB8FCE", "#85C1E9 ", "#58D68D","#F4D03F" ))
p + scale_fill_manual(values=c("#BB8FCE", "#85C1E9 ", "#58D68D","#F4D03F", ))
p<-ggplot(data=pdb, aes(x=V1, y=V2, fill=V1)) +
geom_bar(stat="identity") +
theme_minimal()
p + scale_fill_manual(values=c("#BB8FCE", "#85C1E9 ", "#58D68D","#F4D03F" ))
p + scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
p + labs(title="Crystalization Methods",
x="Method", y = "# of Structures") +  scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
p<-ggplot(data=pdb, aes(x=V1, y=V2, fill=V1)) +
geom_bar(stat="identity") +
+ theme(axis.ticks.x=element_blank()) theme_minimal()
p + labs(title="Crystalization Methods",
x="Method", y = "# of Structures") +  scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
p<-ggplot(data=pdb, aes(x=V1, y=V2, fill=V1)) +
geom_bar(stat="identity") +
theme(axis.ticks.x=element_blank()) theme_minimal()
p<-ggplot(data=pdb, aes(x=V1, y=V2, fill=V1)) +
geom_bar(stat="identity") +
theme(axis.ticks.x=element_blank()) + theme_minimal()
p + labs(title="Crystalization Methods",
x="Method", y = "# of Structures") +  scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
library(ggplot2)
pdb = read.csv("Desktop/Bioinformatics_Project/part2/methods_output.csv", header=FALSE)
p<-ggplot(data=pdb, aes(x=V1, y=V2, fill=V1)) +
geom_bar(stat="identity") +
theme(axis.ticks.x=element_blank()) + theme_minimal()
p + labs(title="Crystalization Methods",
x="Method", y = "# of Structures") +  scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
p<-ggplot(data=pdb, aes(x=V1, y=V2, fill=V1)) +
geom_bar(stat="identity") +
theme(axis.ticks.x=element_blank(),  axis.text.x=element_blank()) + theme_minimal()
p + labs(title="Crystalization Methods",
x="Method", y = "# of Structures") +  scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
p<-ggplot(data=pdb, aes(x=V1, y=V2, fill=V1)) +
geom_bar(stat="identity") +
theme(axis.ticks.x=element_blank(),  axis.text.x=element_blank(), axis.title.x=element_blank()) + theme_minimal()
p + labs(title="Crystalization Methods",
x="Method", y = "# of Structures") +  scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
p<-ggplot(data=pdb, aes(x=V1, y=V2, fill=V1)) +
geom_bar(stat="identity") +
theme(axis.x=FALSE) + theme_minimal()
p + labs(title="Crystalization Methods",
x="Method", y = "# of Structures") +  scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
p<-ggplot(data=pdb, aes(x=V1, y=V2, fill=V1)) +
geom_bar() +
theme(axis.x=FALSE) + theme_minimal()
p + labs(title="Crystalization Methods",
x="Method", y = "# of Structures") +  scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
stat="identity"
stat="identity"
stat="identity"
p + labs(title="Crystalization Methods",
x="Method", y = "# of Structures") +  scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
p<-ggplot(data=pdb, aes(x=V1, y=V2, fill=V1)) +
geom_bar(stat="identity") +
theme(axis.x=FALSE) + theme_minimal()
p + labs(title="Crystalization Methods",
x="Method", y = "# of Structures") +  scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
p<-ggplot(data=pdb, aes( y=V2, fill=V1)) +
geom_bar(stat="identity") +
theme(axis.x=FALSE) + theme_minimal()
p + labs(title="Crystalization Methods",
x="Method", y = "# of Structures") +  scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
p<-ggplot(data=pdb, aes(x ='', y=V2, fill=V1)) +
geom_bar(stat="identity") +
theme(axis.x=FALSE) + theme_minimal()
p + labs(title="Crystalization Methods",
x="Method", y = "# of Structures") +  scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
p<-ggplot(data=pdb, aes(x =V1, y=V2, fill=V1)) +
geom_bar(stat="identity") + theme(axis.text.x = '')
p + labs(title="Crystalization Methods",
x="Method", y = "# of Structures") +  scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
p<-ggplot(data=pdb, aes(x =V1, y=V2, fill=V1)) +
geom_bar(stat="identity") + theme(axis.text.x = ' ')
p + labs(title="Crystalization Methods",
x="Method", y = "# of Structures") +  scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
p<-ggplot(data=pdb, aes(x =V1, y=V2, fill=V1)) +
geom_bar(stat="identity") +xlab("")
p + labs(title="Crystalization Methods",
x="Method", y = "# of Structures") +  scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
library(ggplot2)
pdb = read.csv("Desktop/Bioinformatics_Project/part2/methods_output.csv", header=FALSE)
p<-ggplot(data=pdb, aes(x =V1, y=V2, fill=V1)) +
geom_bar(stat="identity") +xlab("")
p + labs(title="Crystalization Methods",
x="Method", y = "# of Structures") +  scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
p + theme(axis.text.x=element_blank())+ labs(title="Crystalization Methods",
x="Method", y = "# of Structures") +  scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
p + theme(axis.text.x=element_blank(), legend.title = element_blank())+ labs(title="Crystalization Methods",
x="Method", y = "# of Structures") +  scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
library(ggplot2)
pdb = read.csv("Desktop/Bioinformatics_Project/part2/chains_output.csv", header=FALSE)
pdb = read.csv("Desktop/Bioinformatics_Project/part2/chains_output.csv", header=FALSE)
p<-ggplot(data=pdb, aes(x =V1, y=V2, fill=V1)) +
geom_bar(stat="identity") +xlab("")
p + theme(axis.text.x=element_blank(), legend.title = element_blank())+ labs(title="Crystalized Chains",
x="Chain", y = "# of Structures")
p + theme(legend = element_blank())+ labs(title="Crystalized Chains",
x="Chain", y = "# of Structures")
library(ggplot2)
pdb = read.csv("Desktop/Bioinformatics_Project/part2/chains_output.csv", header=FALSE)
p<-ggplot(data=pdb, aes(x =V1, y=V2, fill=V1)) +
geom_bar(stat="identity") +xlab("")
p + theme(legend = element_blank())+ labs(title="Crystalized Chains",
x="Chain", y = "# of Structures")
p + theme(legend = element_blank())+ labs(title="Crystalized Chains", x="Chain", y = "# of Structures")
p + theme(legend = FALSE)+ labs(title="Crystalized Chains", x="Chain", y = "# of Structures")
p + theme(legend.position = "none")+ labs(title="Crystalized Chains", x="Chain", y = "# of Structures")
p<-ggplot(data=pdb, aes(x =V1, y=V2, fill=V1)) +
geom_bar(stat="identity") +xlab("")
p + theme(legend.position = "none")+ labs(title="Length Crystalized Structures", x="Length (aa)", y = "# of Structures")
library(ggplot2)
pdb = read.csv("Desktop/Bioinformatics_Project/part2/lengths_output.csv", header=FALSE)
p<-ggplot(data=pdb, aes(x =V1, y=V2, fill=V1)) +
geom_bar(stat="identity") +xlab("")
p + theme(legend.position = "none")+ labs(title="Length Crystalized Structures", x="Length (aa)", y = "# of Structures")
p<-ggplot(data=pdb, aes(x =V1, y=V2, fill=V1)) +
geom_line(stat="identity") +xlab("")
p + theme(legend.position = "none")+ labs(title="Length Crystalized Structures", x="Length (aa)", y = "# of Structures")
p<-ggplot(data=pdb, aes(x =V1, y=V2, fill=V1)) +
geom_bar(stat="identity") +xlab("")
p + theme(legend.position = "none")+ labs(title="Length Crystalized Structures", x="Length (aa)", y = "# of Structures")
p + theme(legend.position = "none")+ labs(title="Length of Crystalized Structures", x="Length (aa)", y = "# of Structures")
# Load ggplot2
library(ggplot2)
# Create Data
amino = read.csv("Desktop/biochemistry_research/research_lab/organisms.csv", header=FALSE)
# Create Data
amino = read.csv("Desktop/Bioinformatics_Project/part2/organisms.csv", header=FALSE)
# Load ggplot2
library(ggplot2)
# Create Data
organisms = read.csv("Desktop/Bioinformatics_Project/part2/organisms.csv", header=FALSE)
View(organisms)
# Create Data
organisms = read.csv("Desktop/Bioinformatics_Project/part2/organisms_output.csv", header=FALSE)
View(organisms)
Desktop/Bioinformatics_Project/part2/
Desktop/Bioinformatics_Project/part2/
p<-ggplot(data=pdb, aes(x =V1, y=V2, fill=V1)) +
geom_bar(stat="identity") +xlab("")
# Basic piechart
ggplot(data, aes(x="", y=V2, fill=V1)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
# Load ggplot2
library(ggplot2)
# Create Data
organisms = read.csv("Desktop/Bioinformatics_Project/part2/organisms_output.csv", header=FALSE)
# Basic piechart
ggplot(data, aes(x="", y=V2, fill=V1)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
# Basic piechart
ggplot(organisms, aes(x="", y=V2, fill=V1)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
# Basic piechart
ggplot(organisms, aes(x="", y=V2, fill=V1)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
# Basic piechart
ggplot(organisms, aes(x="", y=V2, fill=V1)) +
geom_bar(stat="identity", width=0.2, color="white") +
coord_polar("y", start=0) +
theme_void()
# Basic piechart
ggplot(organisms, aes(x="", y=V2, fill=V1)) +
geom_bar(stat="identity", width=0.01, color="white") +
coord_polar("y", start=0) +
theme_void()
# Basic piechart
ggplot(organisms, aes(x="", y=V2, fill=V1)) +
geom_bar(stat="identity") +
coord_polar("y", start=0) +
theme_void()
# Basic piechart
ggplot(organisms, aes(x="", y=V2, fill=V1)) +
geom_bar(stat="identity") +
coord_polar("y", start=0) +
theme(legend.title = "Source Organism")
# Basic piechart
ggplot(organisms, aes(x="", y=V2, fill=V1)) +
geom_bar(stat="identity") +
coord_polar("y", start=0) +
theme(legend.title = "Source Organism")+
theme_void()
# Create Data
organisms = read.csv("Desktop/Bioinformatics_Project/part2/organisms_output.csv", header=FALSE)
# Basic piechart
ggplot(organisms, aes(x="", y=V2, fill=V1)) +
geom_bar(stat="identity") +
coord_polar("y", start=0) +
theme(legend.title = "Source Organism") +
theme_void()
theme(legend.title = element_blank() +
# Basic piechart
ggplot(organisms, aes(x="", y=V2, fill=V1)) +
geom_bar(stat="identity") +
coord_polar("y", start=0) +
theme(legend.title = element_blank()) +
theme_void()
# Create Data
organisms = read.csv("Desktop/Bioinformatics_Project/part2/organisms_output.csv", header=FALSE)
# Basic piechart
ggplot(organisms, aes(x="", y=V2, fill=V1)) +
geom_bar(stat="identity") +
coord_polar("y", start=0) +
theme(legend.title = element_blank()) +
theme_void()
# Basic piechart
ggplot(organisms, aes(x="", y=V2, fill=V1)) +
geom_bar(stat="identity") +
coord_polar("y", start=0) +
guides(fill=guide_legend(title="New Legend Title")) +
theme_void()
# Basic piechart
ggplot(organisms, aes(x="", y=V2, fill=V1)) +
geom_bar(stat="identity") +
coord_polar("y", start=0) +
guides(fill=guide_legend(title="Source Organism")) +
theme_void()
# Create Data
organisms = read.csv("Desktop/Bioinformatics_Project/part2/organisms_output.csv", header=FALSE)
# Basic piechart
ggplot(organisms, aes(x="", y=V2, fill=V1)) +
geom_bar(stat="identity") +
coord_polar("y", start=0) +
guides(fill=guide_legend(title="Source Organism")) +
theme_void()
# Create Data
organisms = read.csv("Desktop/Bioinformatics_Project/part2/organisms_output.csv", header=FALSE)
# Basic piechart
ggplot(organisms, aes(x="", y=V2, fill=V1)) +
geom_bar(stat="identity") +
coord_polar("y", start=0) +
guides(fill=guide_legend(title="Source Organism")) +
theme_void()
library(ggplot2)
pdb = read.csv("Desktop/Bioinformatics_Project/part2/method_output.csv", header=FALSE)
p<-ggplot(data=pdb, aes(x =V1, y=V2, fill=V1)) +
geom_bar(stat="identity") +xlab("")
p + theme(axis.text.x=element_blank(), legend.title = element_blank())+ labs(title="Crystalization Methods",
x="Method", y = "# of Structures") +  scale_fill_manual(values=c("#BB8FCE", "#85C1E9", "#58D68D","#F4D03F" ))
library(ggplot2)
lengths = read.csv("Desktop/Bioinformatics_Project/part2/lengths_output.csv", header=FALSE)
View(lengths)
p = ggplot(data=lengths, aes(x=V1,y=V2, fill=V1))
p + geom_histogram()
p = ggplot(data=lengths, aes(x=V1, fill=V1))
p + geom_histogram()
lengths = read.csv("Desktop/Bioinformatics_Project/part2/lengths.txt", header=FALSE)
p = ggplot(data=lengths, aes(x=V1, fill=V1))
p + geom_histogram()
lengths = read.csv("Desktop/Bioinformatics_Project/part2/lengths.csv", header=FALSE)
library(ggplot2)
lengths = read.csv("Desktop/Bioinformatics_Project/part2/lengths.csv", header=FALSE)
lengths = read.csv("Desktop/Bioinformatics_Project/part2/length.csv", header=FALSE)
p = ggplot(data=lengths, aes(x=V1, fill=V1))
p + geom_histogram()
qplot(lengths, geom="histogram",
binwidth = 0.5,
main = "Histogram for Age"))
qplot(lengths, geom="histogram",
binwidth = 0.5,
main = "Histogram for Age")
lengths = read.csv("Desktop/Bioinformatics_Project/part2/length.csv", header=FALSE)
p = ggplot(data=lengths, aes(x=V1, fill=V1))
p + geom_histogram()
qplot(lengths, geom="histogram",
binwidth = 0.5,
main = "Histogram for Age")
p = ggplot(data=lengths, aes(x=V1, fill=V1))
p + geom_histogram()
p + geom_histogram(binwidth = 10)
p + geom_histogram(binwidth = 20)
p + geom_histogram(binwidth = 23)
p + geom_histogram(binwidth = 23) + labs(title="Length of Structures")
p + geom_histogram(binwidth = 23) + labs(title="Length of Structures", x= "Length in Residues", y=" # of Structures")
p = ggplot(data=lengths, aes(x=V1, fill=count))
p + geom_histogram(binwidth = 23) + labs(title="Length of Structures", x= "Length in Residues", y=" # of Structures")
p = ggplot(data=lengths, aes(x=V1, fill=..count..))
p + geom_histogram(binwidth = 23) + labs(title="Length of Structures", x= "Length in Residues", y=" # of Structures")
p + geom_histogram(binwidth = 23, show.legend = FALSE) + labs(title="Length of Structures", x= "Length in Residues", y=" # of Structures")
library(ggplot2)
lengths = read.csv("Desktop/Bioinformatics_Project/part2/hydrogen_output.csv", header=FALSE)
lengths = read.csv("Desktop/Bioinformatics_Project/part2/models_output/hydrogen_output.csv", header=FALSE)
lengths = read.csv("Desktop/Bioinformatics_Project/part2/model_output/hydrogen_output.csv", header=FALSE)
p = ggplot(data=lengths, aes(x=V1, fill=..count..))
p + geom_histogram(binwidth = 23, show.legend = FALSE) + labs(title="Length of Structures", x= "Length in Residues", y=" # of Structures")
library(ggplot2)
lengths = read.csv("Desktop/Bioinformatics_Project/part2/model_output/hydrogen_output.csv", header=FALSE)
lengths = read.csv("Desktop/Bioinformatics_Project/part2/model_output/hydrogen_outputs.csv", header=FALSE)
lengths = read.csv("Desktop/Bioinformatics_Project/part2/model_outputs/hydrogen_output.csv", header=FALSE)
p = ggplot(data=lengths, aes(x=V1, fill=..count..))
p + geom_histogram(binwidth = 23, show.legend = FALSE) + labs(title="Length of Structures", x= "Length in Residues", y=" # of Structures")
p + geom_point()
p = ggplot(data=lengths, aes(x=V1,y=V2, fill=..count..))
p + geom_point()
lengths = read.csv("Desktop/Bioinformatics_Project/part2/model_outputs/hydrogen_output.csv", header=FALSE)
p = ggplot(data=lengths, aes(x=V1,y=V2, fill=..count..))
p + geom_point()
p = ggplot(data=lengths, aes(x=V1,y=V2, fill=V1))
p + geom_point()
p = ggplot(data=lengths, aes(x=V1,y=V2, fill=V1, show.legend=FALSE))
p + geom_point()
p + geom_point(show.legend=FALSE)
p + geom_point(show.legend=FALSE) + labs(x= "Length in Residues", y="Distance Difference") + xlab('')
lengths = read.csv("Desktop/Bioinformatics_Project/part2/model_outputs/hydrogen_output.csv", header=FALSE)
p = ggplot(data=lengths, aes(x=V1,y=V2, fill=V1))
p + geom_point(show.legend=FALSE) + labs(x= "Length in Residues", y="Distance Difference") + xlab('')
p + geom_point(show.legend=FALSE) + labs(x= "Length in Residues", y="Distance Difference") + theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
p = ggplot(data=lengths, aes(x=V1,y=V2, fill=V1))
p + geom_point(show.legend=FALSE) + labs(x= "Length in Residues", y="Distance Difference") + theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
library(ggplot2)
lengths = read.csv("Desktop/Bioinformatics_Project/part2/model_outputs/hydrogen_output.csv", header=FALSE)
p = ggplot(data=lengths, aes(x=V1,y=V2, fill=V1))
p + geom_point(show.legend=FALSE) + labs(x= "Length in Residues", y="Distance Difference") + theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
lengths = read.csv("Desktop/Bioinformatics_Project/part2/model_outputs/hydrogen_output_.csv", header=FALSE)
p = ggplot(data=lengths, aes(x=V1,y=V2, fill=V1))
p + geom_point(show.legend=FALSE) + labs(x= "Length in Residues", y="Distance Difference") + theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
p + geom_histogram(binwidth = 23, show.legend = FALSE) + labs(title="Length of Structures", x= "Length in Residues", y=" # of Structures")
lengths = read.csv("Desktop/Bioinformatics_Project/part2/length.csv", header=FALSE)
p = ggplot(data=lengths, aes(x=V1, fill=..count..))
library(ggplot2)
lengths = read.csv("Desktop/Bioinformatics_Project/part2/length.csv", header=FALSE)
p = ggplot(data=lengths, aes(x=V1, fill=..count..))
p + geom_histogram(binwidth = 23, show.legend = FALSE) + labs(title="Length of Structures", x= "Length in Residues", y=" # of Structures")
source("http://bioconductor.org/biocLite.R")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.11")
source("http://bioconductor.org/biocLite.R")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.11")
r
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.11")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.11")
install.packages("ShotgunFunctionalizeR", contriburl="http://shotgun.zool.gu.se")
install.packages("/Volumes/Elements/ShotgunFunctionalizeR_1.2-9.tar", repos = NULL)
install.packages("/Volumes/Elements/ShotgunFunctionalizeR_1.2-9.tar", repos = NULL)
install.packages("/Volumes/Elements/ShotgunFunctionalizeR_1.2-9.tar", repos = NULL, type="source")
install.packages("optparse")
install.packages("NOISeq")
install.packages("XML")
install.packages("Rsamtools")
install.packages("Repitools")
install.packages("rtracklayer")
Rscript scripts/installDependencies.r
install.packages("hclust2")
setwd("/Volumes/Elements")
library(edgeR)
install.packages(edgeR)
install.packages("edgeR")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("edgeR")
library(edgeR)
raw_counts <- read.table("cog-counts-raw.txt", header=TRUE, row.names = 1)
raw_counts <- read.table("cog-count-raw.txt", header=TRUE, row.names = 1)
raw_counts <- read.table("cog_count_raw.txt", header=TRUE, row.names = 1)
raw_counts <- as.matrix(raw_counts)
head(raw_counts)
raw_counts <- read.table("cog_count_raw.txt", header=TRUE)
raw_counts <- read.table("cog_count_raw.txt", header=TRUE)
raw_counts <- as.matrix(raw_counts)
head(raw_counts)
dge2 <- DGEList(raw_counts)
dge2
dge <- calcNormFactors(dge2, method = "TMM")
dge
pseudo_TMM <- log2(cpm(dge) + 1)
df_TMM <- melt(pseudo_TMM, id = rownames(raw_counts_wn))
install.packages("reshape"); library(reshape)
pseudo_TMM <- log2(cpm(dge) + 1)
df_TMM <- melt(pseudo_TMM, id = rownames(raw_counts_wn))
names(df_TMM)[1:2] <- c ("id", "sample")
df_TMM$group <- substr(as.character(df_TMM$sample), 1,
nchar(as.character(df_TMM$sample)) - 5)
df_TMM$method <- rep("TMM", nrow(df_TMM))
dr_TMM
df_TMM
pseudo_TMM <- log2(cpm(dge) + 1)
df_TMM <- melt(pseudo_TMM, id = rownames(raw_counts_wn))
names(df_TMM)[1:2] <- c ("COG", "sample")
df_TMM$group <- substr(as.character(df_TMM$sample), 1,
nchar(as.character(df_TMM$sample)) - 5)
df_TMM$method <- rep("TMM", nrow(df_TMM))
df_TMM
write.table(df_TMM, file="mymatrix.txt", row.names=TRUE, col.names=TRUE)
write.table(df_TMM, file="mymatrix.txt", row.names=FALSE, col.names=TRUE, sep="\t")
setwd("~/Documents/Github/zebrafishGutMicrobiome/")
inputData <- read.csv("mifaser_heatmap_data.csv")
data <- as.matrix(inputData)
# Default Heatmap
heatmap(data)
# Default Heatmap
heatmap(data, row_title=("5.1.3.23","5.1.1.20","2.4.2.29","2.4.2.19","2.4.2.3","2.4.2.14","5.3.1.9","5.1.1.7","5.1.1.3","2.5.1.7"))
inputData <- read.csv("mifaser_heatmap_data.csv")
data <- as.matrix(inputData)
# Default Heatmap
heatmap(data)
View(data)
df <- scale(mtcars)
df
inputData <- read.csv("mifaser_heatmap_data.csv")
setwd("~/Documents/Github/zebrafishGutMicrobiome/")
inputData <- read.csv("mifaser_heatmap_data.csv")
View(data)
source('~/Documents/GitHub/zebrafishGutMicrobiome/mifaser_weka_format.R', echo=TRUE)
data <- as.matrix(inputData)
# Default Heatmap
heatmap(data)
inputData <- read.csv("mifaser_heatmap_data.csv")
data <- as.matrix(inputData)
# Default Heatmap
heatmap(data)
data
inputData <- read.csv("mifaser_heatmap_data.csv")
data <- as.matrix(inputData)
data
# Default Heatmap
heatmap(data)
inputData <- read.csv("mifaser_heatmap_data.csv")
data <- as.matrix(inputData)
data
# Default Heatmap
heatmap(data)
m <- as.matrix(inputData[, -1])
rownames(m) <- dataset$X
rownames(m) <- inputData$X
heatmap(m)
heatmap(m, Colv = NA, Rowv = NA, colors = "RdYlBu")
col <- colorRampPalette(brewer.pal(10, "RdYlBu"))(256)
library("RColorBrewer")
col <- colorRampPalette(brewer.pal(10, "RdYlBu"))(256)
heatmap(m, Colv = NA, Rowv = NA, col=col)
col <- colorRampPalette(brewer.pal(10, "BuYlRd"))(256)
col <- colorRampPalette("Blues")
col <- colorRampPalette((brewer.pal(10, "Blues"))(256))
heatmap(m, Colv = NA, Rowv = NA, col=col)
col <- colorRampPalette((brewer.pal(9, "Blues"))(256))
heatmap(m, Colv = NA, Rowv = NA, col=col)
col <- colorRampPalette((brewer.pal(9, "Blues")))
heatmap(m, Colv = NA, Rowv = NA, col=col)
heatmap(m, Colv = NA, Rowv = NA)
setwd("~/Documents/Github/zebrafishGutMicrobiome/")
inputData <- read.csv("mifaser_heatmap_data.csv")
m <- as.matrix(inputData[, -1])
rownames(m) <- inputData$X
heatmap(m, Colv = NA, Rowv = NA)
library("RColorBrewer")
heatmap(m, Colv = NA, Rowv = NA, col=brewer.pal(9,"Blues"))
heatmap(m, Colv = NA, Rowv = NA, col=brewer.pal(9,"Blues"), legend="col")
heatmap(m, Colv = NA, Rowv = NA, col=brewer.pal(9,"Blues"), legend=c("col"))
heatmap(m, Colv = NA, Rowv = NA, col=brewer.pal(9,"Blues"), legend=c("none"))
heatmap(m, Colv = NA, Rowv = NA, col=brewer.pal(9,"Blues"))
heatmap(m, Colv = NA, Rowv = NA, col=brewer.pal(9,"Blues"))
fill=colorRampPalette(brewer.pal(9,"Blues"))
legend(x="bottomright", legend=c("Abundance"),
fill=colorRampPalette(brewer.pal(9,"Blues")))
legend(x="bottomright", legend=c("Abundance"),
fill=colorRampPalette(brewer.pal(9,"Blues"))(1))
library(circlize)
heatmap.2(m)
library(ggplot2)
heatmap.2(m)
heatmap2(m)
library(gplots)
heatmap2(m)
heatmap.2(m)
heatmap(m, Colv = NA, Rowv = NA, col=brewer.pal(9,"Blues"))
inputData <- read.csv("mifaser_heatmap_data.csv")
m <- as.matrix(inputData[, -1])
rownames(m) <- inputData$X
library("RColorBrewer")
heatmap(m, Colv = NA, Rowv = NA, col=brewer.pal(9,"Blues"))
heatmap(m, Colv = NA, Rowv = NA, col=brewer.pal(9,"Blues"))
legend(x="bottomright", legend=c("Abundance"),
fill=colorRampPalette(brewer.pal(9,"Blues"))(1))
inputData <- read.csv("mifaser_heatmap_data.csv")
m <- as.matrix(inputData[, -1])
rownames(m) <- inputData$X
library("RColorBrewer")
heatmap(m, Colv = NA, Rowv = NA, col=brewer.pal(9,"Blues"))
heatmap(m, Colv = NA, Rowv = NA, col=brewer.pal(9,"Blues"))
heatmap(m, Colv = NA, Rowv = NA, col=brewer.pal(9,"Blues"))
inputData <- read.csv("mifaser_heatmap_data.csv")
m <- as.matrix(inputData[, -1])
rownames(m) <- inputData$X
library("RColorBrewer")
heatmap(m, Colv = NA, Rowv = NA, col=brewer.pal(9,"Blues"))
g <- heatmap(m, Colv = NA, Rowv = NA, col=brewer.pal(9,"Blues"))
g <- heatmap(m, Colv = NA, Rowv = NA, col=brewer.pal(9,"Blues"))
heatmap(m, Colv = NA, Rowv = NA, col=brewer.pal(9,"Blues"))
